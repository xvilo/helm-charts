apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mastodon.fullname" . }}-streaming
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.streaming.replicas }}
  selector:
    matchLabels:
      {{- include "mastodon.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: streaming
  template:
    metadata:
      annotations:
        checksum/environment: {{ include (print $.Template.BasePath "/environment-configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mastodon.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: streaming
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mastodon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - kube-apiserver
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [node, ./streaming]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-environment
          env:
{{ include "mastodon.redis.environmentSecrets" . | indent 12 }}
            - name: "PORT"
              value: {{ .Values.streaming.port | quote }}
            {{- if .Values.streaming.db.sslMode }}
            - name: "DB_SSLMODE"
              value: {{ .Values.streaming.db.sslMode | quote }}
            {{- end }}
            {{- if .Values.streaming.rejectUnauthorized }}
            - name: "NODE_TLS_REJECT_UNAUTHORIZED"
              value: '0'
            {{- end }}
          ports:
            - name: streaming
              containerPort: {{ .Values.streaming.port }}
              protocol: TCP
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

