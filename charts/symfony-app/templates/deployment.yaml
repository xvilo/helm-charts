apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "symfony-app.fullname" . }}
  labels:
    {{- include "symfony-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "symfony-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations}}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        checksum/nginx: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
        app.kubernetes.io/version: {{ (default .Chart.AppVersion .Values.source.version) | quote }}
      labels:
        {{- include "symfony-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "symfony-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "symfony-app.fullname" . }}-nginx
          image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
          imagePullPolicy: {{ .Values.image.nginx.pullPolicy }}
          workingDir: /app
          ports:
            - name: http
              containerPort: {{ .Values.service.nginx.port }}
              protocol: TCP
          {{- toYaml .Values.probes.nginx | nindent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: app-directory
              mountPath: /app
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/
              readOnly: true
        - name: {{ include "symfony-app.fullname" . }}-php
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.fpm.repository }}:{{ .Values.image.fpm.tag }}"
          imagePullPolicy: {{ .Values.image.fpm.pullPolicy }}
          workingDir: /app
          {{- include "symfony-app.env" . | nindent 10 }}
          ports:
            - name: fpm
              containerPort: {{ .Values.service.fpm.port }}
              protocol: TCP
          {{- toYaml .Values.probes.fpm | nindent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: app-directory
              mountPath: /app
          {{- if .Values.pyroscope.enabled }}
          command: ['pyroscope']
          args: ['exec', '-spy-name', 'phpspy', 'php-fpm']
          {{- end }}
      initContainers:
        {{- if .Values.source.clone }}
        - name: init-fetch-code
          image: {{ (printf "%s:%s" $.Values.image.git.repository $.Values.image.git.tag) | quote }}
          workingDir: /app
          env:
          volumeMounts:
            - name: app-directory
              mountPath: /app
          command: [ 'sh', '-c', "git clone --depth 1 --branch {{ default .Chart.AppVersion .Values.source.version }} {{ .Values.source.remote }} /app" ]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        {{- end }}
        {{- if .Values.composer.autoinstall }}
        - name: dependencies-composer
          image: "{{ .Values.image.php.repository }}:{{ .Values.image.php.tag }}"
          workingDir: /app
          {{- include "symfony-app.env" . | nindent 10 }}
          volumeMounts:
            - name: app-directory
              mountPath: /app
          command: [ 'sh', '-c', "composer install  --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader --optimize-autoloader" ]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        {{- end }}
      {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .image | default (printf "%s:%s" $.Values.image.php.repository $.Values.image.php.tag) | quote }}
          workingDir: /app
          {{- include "symfony-app.env" $ | nindent 10 }}
          volumeMounts:
            - name: app-directory
              mountPath: /app
          command: [ 'sh', '-c', {{ .command | quote }} ]
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ template "symfony-app.fullname" . }}-nginx-config
        - name: app-directory
          emptyDir: {}